version: 2.1

orbs:
  node: circleci/node@5.0.2

jobs:
    build-mac:
        macos:
            xcode: 12.2
        steps:
            - node/install:
                install-yarn: true
                node-version: "14.19.1"
            - run:
                name: "check node version"
                command: node -v
            - run:
                name: "check node location"
                command: which node
            - run:
                name: "yarn build and install"
                command: yarn build && yarn install
    build:
        docker:
            - image: cimg/node:14.19.1
            - image: mdillon/postgis:11
        resource_class: xlarge
        environment:
          MBX_CI_DOMAIN: o619qyc20d.execute-api.us-east-1.amazonaws.com
        steps:
            - run:
                name: "Add ubuntu-toolchain"
                command: |
                  sudo apt-get update -y \
                  && sudo apt-get install -y build-essential python software-properties-common git postgresql-client curl wget gnupg2 \
                  && sudo apt-get -y install python2.7

            - checkout
            - run:
                name: "install mbx-ci"
                command: "curl -Ls https://mapbox-release-engineering.s3.amazonaws.com/mbx-ci/latest/mbx-ci-linux-amd64 > mbx-ci && chmod 755 ./mbx-ci"       
            - run:
                name: "Install Rust"
                command: |
                  curl https://sh.rustup.rs -sSf > /tmp/rustup.sh \
                  && sh /tmp/rustup.sh -y \
                  && echo "export PATH=$HOME/.cargo/bin:$PATH" >> $BASH_ENV

            - run:
                name: "Install NodeJS"
                command: |
                  yarn install

            - run:
                name: "Install Neon"
                command: "yarn global add neon-cli@0.7.1"
            - run:
                name: "Yarn Install"
                command: yarn build && yarn install
            - run:
                name: "Cargo Test"
                command: cd native/ && cargo test --release
            - run:
                name: "Cargo Format"
                command: rustup component add rustfmt && cd native/ && cargo fmt -- --check
            - run:
                name: "Yarn Lint"
                command: "yarn run lint"
            - run:
                name: "Yarn PreTest"
                command: "yarn run pretest"
            - run:
                name: "Yarn Coverage"
                command: "yarn run coverage"
                no_output_timeout: "12m"
            - run:
                name: "Yarn Coverage-Upload"
                command: "yarn run coverage-upload"
            - run:
                name: "Publish Release"
                command: ./scripts/publish.sh

workflows:
    version: 2
    build-mac:
        jobs:
            - build-mac:
                filters:
                    tags:
                        only: /.*/             
